{"version":3,"file":"static/js/219.7ead1617.chunk.js","mappings":"wJACA,QAA2B,2BAA3B,EAAkE,4BAAlE,EAAgJ,gC,sBCEzI,SAASA,EAAOC,GACrB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAGC,CACAC,GAAIH,EAAMI,GAAGC,SAEZL,EAAMM,MAGb,C,aCXO,SAASC,EAAQP,GACtB,OAAOC,EAAAA,EAAAA,KAAA,OAAAI,SAAML,EAAMQ,SACrB,C,8BCIA,MAAMC,EAAkBT,IACtB,MAAM,SACJU,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACEC,EAAAA,EAAAA,MAEJ,OACEC,EAAAA,EAAAA,MAAA,QACEC,SAAUN,GAAcO,IACtBlB,EAAMW,aAAaO,GACnBJ,GAAO,IACNT,SAAA,EAEHJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CACPT,SAAUA,EACVJ,KAAK,UACLO,OAAQA,EACRO,MAAO,CACLC,SAAU,CAAEC,SAAS,MAEvBC,YAAY,0BAGhBtB,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAAQnB,SAAC,aAEnB,E,oBClCX,IAAIoB,EAA8BC,IAAK,CACrCC,OAAQD,EAAME,KAAKD,SC8CrB,SAAeE,E,OAAAA,KACbC,EAAAA,EAAAA,KAhBqBJ,IACd,CACLK,SAAUL,EAAMM,aAAaD,SAC7BE,QAASP,EAAMM,aAAaC,QAC5BC,eAAgBR,EAAMM,aAAaE,mBAGbC,IACjB,CACLC,YAAclB,IACZiB,GAASE,EAAAA,EAAAA,GAAyBnB,EAAKV,SAAS,ODtC/C,SAA0B8B,GAC/B,MAAMC,UAA0BC,EAAAA,UAC9BC,MAAAA,GACE,OAAKC,KAAK1C,MAAM2B,QACT1B,EAAAA,EAAAA,KAACqC,EAAS,IAAKI,KAAK1C,SADIC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAACxC,GAAG,UAE9C,EAKF,OAHqC2B,EAAAA,EAAAA,IAAQL,EAARK,CACnCS,EAGJ,GCgCA,EFTO,SAAkBvC,GACvB,OAAKA,EAAM2B,QAOTX,EAAAA,EAAAA,MAAA,OAAK4B,UAAWC,EAAiBxC,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,OAAK2C,UAAWC,EAAkBxC,SAC/BL,EAAMiC,QAAQa,KAAKC,IAClB9C,EAAAA,EAAAA,KAACF,EAAM,CAACO,KAAMyC,EAAEzC,KAAMF,GAAI2C,EAAE3C,IAAS2C,EAAE3C,SAI3CH,EAAAA,EAAAA,KAAA,OAAK2C,UAAWC,EAAsBxC,SACnCL,EAAM+B,SAASe,KAAKC,IACnB9C,EAAAA,EAAAA,KAACM,EAAO,CAACC,QAASuC,EAAEvC,SAAcuC,EAAE3C,SAGxCH,EAAAA,EAAAA,KAACQ,EAAc,CAACE,aAhBAO,IAClBlB,EAAMoC,YAAYlB,EAAK,QAHhBjB,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAACxC,GAAG,UAqBxB,G","sources":["webpack://react-kabzda-1/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Dialog/Dialog.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/hoc/WithAuthRedirect.js","components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__8s+pC\",\"chat_list\":\"Messages_chat_list__8hhII\",\"active\":\"Messages_active__b93f2\",\"messages_list\":\"Messages_messages_list__9AHyG\",\"message\":\"Messages_message__O19dD\",\"chat_item\":\"Messages_chat_item__fsrlO\"};","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport function Dialog(props) {\n  return (\n    <Link\n      //   className={({ isActive }) =>\n      //     isActive ? `${classes.active} ${classes.chat_item}` : classes.chat_item\n      //   }\n      to={props.id}\n    >\n      {props.name}\n    </Link>\n  );\n}\n","import React from \"react\";\nimport classes from \"./Message.module.css\";\n\nexport function Message(props) {\n  return <div>{props.message}</div>;\n}\n","import React from \"react\";\nimport classes from \"./Messages.module.css\";\nimport { Dialog } from \"./Dialog/Dialog\";\nimport { Navigate } from \"react-router-dom\";\nimport { Message } from \"./Message/Message\";\nimport { useForm } from \"react-hook-form\";\nimport { TextArea } from \"../Common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\n\nconst AddMessageForm = (props) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  return (\n    <form\n      onSubmit={handleSubmit((data) => {\n        props.handleSubmit(data);\n        reset();\n      })}\n    >\n      <div>\n        <TextArea\n          register={register}\n          name=\"message\"\n          errors={errors}\n          rules={{\n            validate: { required },\n          }}\n          placeholder=\"Enter your message\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Send</button>\n      </div>\n    </form>\n  );\n};\n\nexport function Messages(props) {\n  if (!props.isAuth) {\n    return <Navigate to=\"/login\" />;\n  }\n  let handleSubmit = (data) => {\n    props.sendMessage(data);\n  };\n  return (\n    <div className={classes.messages}>\n      <div className={classes.chat_list}>\n        {props.dialogs.map((d) => (\n          <Dialog name={d.name} id={d.id} key={d.id} />\n        ))}\n      </div>\n\n      <div className={classes.messages_list}>\n        {props.messages.map((d) => (\n          <Message message={d.message} key={d.id} />\n        ))}\n      </div>\n      <AddMessageForm handleSubmit={handleSubmit} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport function WithAuthRedirect(Component) {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n  return ConnectedAuthRedirectComponent;\n}\n","import React from \"react\";\nimport classes from \"./Messages.module.css\";\nimport { Messages } from \"./Messages\";\nimport { sendMessageActionCreator } from \"../../redux/messages_reducer\";\n// import StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\nimport { WithAuthRedirect } from \"../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\n// export function MessagesContainer() {\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => {\n//         let state = store.getState().messagesPage;\n//         let onSendMessageClick = () => {\n//           store.dispatch(sendMessageActionCreator());\n//         };\n//         let onNewMessageChange = (newMessage) => {\n//           store.dispatch(\n//             updateNewMessageTextActionCreator(newMessage.target.value)\n//           );\n//         };\n//         return (\n//           <Messages\n//             updateNewMessage={onNewMessageChange}\n//             sendMessage={onSendMessageClick}\n//             messages={state.messages}\n//             dialogs={state.dialogs}\n//             newMessageText={state.newMessageText}\n//           />\n//         );\n//       }}\n//     </StoreContext.Consumer>\n//   );\n// }\n\nlet mapStateToProps = (state) => {\n  return {\n    messages: state.messagesPage.messages,\n    dialogs: state.messagesPage.dialogs,\n    newMessageText: state.messagesPage.newMessageText,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (data) => {\n      dispatch(sendMessageActionCreator(data.message));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithAuthRedirect\n)(Messages);\n"],"names":["Dialog","props","_jsx","Link","to","id","children","name","Message","message","AddMessageForm","register","handleSubmit","formState","errors","reset","useForm","_jsxs","onSubmit","data","TextArea","rules","validate","required","placeholder","type","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messages","messagesPage","dialogs","newMessageText","dispatch","sendMessage","sendMessageActionCreator","Component","RedirectComponent","React","render","this","Navigate","className","classes","map","d"],"sourceRoot":""}